name: Terraform Destroy

on:
  workflow_call:
    inputs:
      terraform_version:
        required: true
        type: string
      module_directory:
        required: true
        type: string
    secrets:
      azure_client_id:
        required: true
        description: 'Azure Client ID for authentication'
      azure_client_secret:
        required: true
        description: 'Azure Client Secret for authentication'
      azure_tenant_id:
        required: true
        description: 'Azure Tenant ID for authentication'
      azure_subscription_id:
        required: true
        description: 'Azure Subscription ID for identification'

jobs:
  terraform-destroy-list:
    name: 'Terraform Destroy List State' 
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.azure_client_id }}
      ARM_CLIENT_SECRET: ${{ secrets.azure_client_secret }}
      ARM_TENANT_ID: ${{ secrets.azure_tenant_id }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.azure_subscription_id }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "${{ inputs.terraform_version }}"

      - name: Terraform Initialization
        run: |
          az login --service-principal --username $ARM_CLIENT_ID --password $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID
          az account set --subscription $ARM_SUBSCRIPTION_ID
          
          cd ${{ inputs.module_directory }}
          terraform init -upgrade

      - name: Terraform Validate
        run: |
          cd ${{ inputs.module_directory }}
          terraform validate

      - name: List Terraform State
        run: |
          cd ${{ inputs.module_directory }}
          terraform state list || echo "No state found, proceeding with destroy"

  terraform-destroy-plan:
    needs: terraform-destroy-list
    name: 'Terraform Destroy Plan'
    runs-on: ubuntu-latest
    environment: terraform-destroy-approval-1  # Second approval required
    env:
      ARM_CLIENT_ID: ${{ secrets.azure_client_id }}
      ARM_CLIENT_SECRET: ${{ secrets.azure_client_secret }}
      ARM_TENANT_ID: ${{ secrets.azure_tenant_id }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.azure_subscription_id }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "${{ inputs.terraform_version }}"

      - name: Terraform Initialization
        run: |
          az login --service-principal --username $ARM_CLIENT_ID --password $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID
          az account set --subscription $ARM_SUBSCRIPTION_ID
          cd ${{ inputs.module_directory }}
          terraform init -upgrade

      - name: Terraform Destroy Plan
        run: |
          cd ${{ inputs.module_directory }}
          terraform plan -destroy -out=destroy.tfplan

      - name: Save Destroy Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-destroy-plan
          path: ${{ inputs.module_directory }}/destroy.tfplan

  terraform-destroy-apply:
    needs: terraform-destroy-plan
    name: 'Terraform Destroy Apply' 
    runs-on: ubuntu-latest
    environment: terraform-destroy-approval-2  # Final approval before destroy
    env:
      ARM_CLIENT_ID: ${{ secrets.azure_client_id }}
      ARM_CLIENT_SECRET: ${{ secrets.azure_client_secret }}
      ARM_TENANT_ID: ${{ secrets.azure_tenant_id }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.azure_subscription_id }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "${{ inputs.terraform_version }}"

      - name: Terraform Initialization
        run: |
          az login --service-principal --username $ARM_CLIENT_ID --password $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID
          az account set --subscription $ARM_SUBSCRIPTION_ID
          cd ${{ inputs.module_directory }}
          terraform init -upgrade

      - name: Download Destroy Plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-destroy-plan
          path: ${{ inputs.module_directory }}

      - name: Terraform Apply Destroy Plan
        run: |
          cd ${{ inputs.module_directory }}
          terraform apply destroy.tfplan

      - name: Terraform Destroy Final Step
        run: |
          cd ${{ inputs.module_directory }}
          terraform destroy -auto-approve
